name: SQS Integration Test

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to test'
        required: true
        type: choice
        options:
          - stage
          - prod
        default: 'stage'
  schedule:
    - cron: '0 * * * *'

jobs:
  manual_integration_test:
    if: github.event_name == 'workflow_dispatch'
    runs-on: self-hosted
    strategy:
      matrix:
        env:
          - stage
          - prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f tests/requirements.txt ]; then pip install -r tests/requirements.txt; fi
      
      - name: Execute tests
        run: pytest -s -n auto
        env:
          SQS_DOMAIN: ${{ matrix.env }}
          
  scheduled_integration_test:
    if: github.event_name == 'schedule'
    runs-on: self-hosted
    strategy:
      matrix:
        include:
          - env: stage
            sqs_endpoint: 'https://sqs.stage.osmosis.zone'
          - env: prod
            sqs_endpoint: 'https://sqs.osmosis.zone'
          - env: eu
            sqs_endpoint: 'https://sqs.eu.osmosis.zone'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f tests/requirements.txt ]; then pip install -r tests/requirements.txt; fi
      
      - name: Execute tests
        run: pytest -s -n auto
        env:
          SQS_DOMAIN: ${{ matrix.sqs_endpoint }}