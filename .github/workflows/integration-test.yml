name: SQS Integration Test

on:
  workflow_dispatch:
    inputs:
      environments:
        description: 'Enter comma-separated list of environments (e.g., stage,prod,eu).'
        required: true
        default: 'stage'
  schedule:
    - cron: '0 * * * *'

jobs:
  generate_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate matrix for workflow_dispatch or schedule
        id: set-matrix
        run: |
          echo "Generating matrix..."
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo '{"include": [' > matrix.json
            IFS=',' read -ra ADDR <<< "${{ github.event.inputs.environments }}"
            first=true
            for env in "${ADDR[@]}"; do
              endpoint=$(jq -r --arg env "$env" '.[$env]' .github/workflows/env_mappings.json)
              if [[ -n "$endpoint" && "$endpoint" != "null" ]]; then
                if [ "$first" = true ]; then
                  echo "{\"env\":\"$env\", \"sqs_endpoint\":\"$endpoint\"}" >> matrix.json
                  first=false
                else
                  echo ",{\"env\":\"$env\", \"sqs_endpoint\":\"$endpoint\"}" >> matrix.json
                fi
              fi
            done
            echo ']}' >> matrix.json
          else
            jq -c 'to_entries | map({"env": .key, "sqs_endpoint": .value}) | {"include": .}' .github/workflows/env_mappings.json > matrix.json
          fi

          echo "Generated matrix.json content:"
          cat matrix.json

          MATRIX=$(cat matrix.json)
          if [[ -z "$MATRIX" || "$MATRIX" == "null" ]]; then
            echo "Matrix generation failed."
            exit 1
          fi

          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  integration_test:
    needs: generate_matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate_matrix.outputs.matrix).include }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f tests/requirements.txt ]; then pip install -r tests/requirements.txt; fi
      - name: Execute tests
        run: pytest -s -n auto
        env:
          SQS_DOMAIN: ${{ matrix.sqs_endpoint }}
