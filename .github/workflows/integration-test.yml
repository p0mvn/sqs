name: SQS Integration Test

on:
  workflow_dispatch:
    inputs:
      environments:
        description: 'Enter comma-separated list of environments (e.g., stage,prod,eu).'
        required: true
        default: 'stage'
  schedule:
    - cron: '0 * * * *'

jobs:
  generate_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate matrix for workflow_dispatch
        id: set-matrix
        run: |
          MATRIX=""
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo '{ "matrix": [' > matrix.json
            IFS=',' read -ra ADDR <<< "${{ github.event.inputs.environments }}"
            for i in "${ADDR[@]}"; do
              jq --arg env "$i" '.[$env]' .github/workflows/env_mappings.json | xargs -I {} echo '{"env":"'$i'", "sqs_endpoint": "{}"},' >> matrix.json
            done
            echo '{}]}' >> matrix.json
            sed -i '$d' matrix.json
            echo ']}' >> matrix.json
          else
            jq -c '[.[] | {"env": (. | keys_unsorted[]), "sqs_endpoint": .[]} ]' .github/workflows/env_mappings.json > matrix.json
          fi

          echo "Generated matrix.json content:"
          cat matrix.json

          MATRIX=$(cat matrix.json)
          if [[ -z "$MATRIX" ]]; then
            echo "Matrix generation failed."
            exit 1
          fi

          echo "::set-output name=matrix::$MATRIX"

  integration_test:
    needs: generate_matrix
    runs-on: self-hosted
    strategy:
      matrix: ${{ fromJson(needs.generate_matrix.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: ./.github/workflows/integration-test-steps.yml
        with:
          sqs_endpoint: ${{ matrix.sqs_endpoint }}
